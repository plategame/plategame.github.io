{"version":3,"sources":["components/StateButton.js","utils/Game.js","App.js","index.js"],"names":["StateButton","props","name","children","seen","showSeen","className","onClick","toggleSeen","allStates","codeTable","newGame","map","s","saveGame","game","num","digit","encoded","i","length","App","useEffect","document","title","gameState","getUrlParam","isValidGame","current","indexOf","j","restoreGame","show","array","setShowSeen","setStateArray","setUrlParams","useState","stateArray","id","params","window","location","search","startsWith","splitParams","substring","split","p","state","tempArray","filter","forEach","newGameState","currentURL","href","pathIndex","pathname","newURL","substr","history","replaceState","type","checked","value","onChange","confirm","newArray","so","ReactDOM","render","StrictMode","getElementById"],"mappings":"6RAiBeA,EAdK,SAACC,GACjB,IAAMC,EAAOD,EAAME,SAEnB,OAAIF,EAAMG,KACFH,EAAMI,SACE,qBAAKC,UAAU,aAAaC,QAAS,kBAAMN,EAAMO,WAAWN,IAA5D,SAAoEA,IAErE,KAGH,qBAAKI,UAAU,eAAeC,QAAS,kBAAMN,EAAMO,WAAWN,IAA9D,SAAsEA,KCZ9EO,EAAY,CACd,UAAW,SAAU,UAAW,WAAY,aAC5C,WAAY,cAAe,WAAY,UAAW,UAClD,SAAU,QAAS,WAAY,UAAW,OAAQ,SAClD,WAAY,YAAa,QAAS,WAAY,gBAC9C,WAAY,YAAa,cAAe,WAAY,UACpD,WAAY,SAAU,gBAAiB,aAAc,aACrD,WAAY,iBAAkB,eAAgB,OAAQ,WACtD,SAAU,eAAgB,eAAgB,iBAC1C,eAAgB,YAAa,QAAS,OAAQ,UAAW,WACzD,aAAc,gBAAiB,YAAa,WAE1CC,EAAY,iEAMZC,EAAU,kBAAMF,EAAUG,KAAK,SAAAC,GACnC,MAAO,CACLX,KAAMW,EACNT,MAAM,OAqBHU,EAAW,SAACC,EAAMV,GAMrB,IAJA,IAAIW,EAAMD,EAAK,GAAGX,KAAO,EAAI,EACzBa,EAAQ,EACRC,EAAUb,EAAW,IAAM,IAEtBc,EAAI,EAAGA,EAAIJ,EAAKK,OAAQD,IAE1BA,EAAI,IAAM,GACXD,GAAWR,EAAUM,GACrBC,EAAQ,EACRD,EAAM,GAENC,GAAS,EAGRF,EAAKI,GAAGf,OACTY,GAAG,SAAK,EAAKC,IAMnB,OADJC,GAAWR,EAAUM,IC8BRK,EA1FH,WAEVC,qBAAU,WACRC,SAASC,MAAQ,qBAEjB,IAAMC,EAAYC,EAAY,SAE9B,GDKkB,SAACD,GAAD,OAA4B,MAAbA,GAAqBA,EAAUL,OAAS,ECLrEO,CAAYF,GAAY,CAC1B,MDaiB,SAACA,GAKlB,IAHA,IAAIV,EAAOJ,IACPiB,EAAU,EAELT,EAAI,EAAGA,EAAIM,EAAUL,OAAQD,IAGnC,IAFA,IAAIH,EAAMN,EAAUmB,QAAQJ,EAAUN,IAE7BW,EAAI,EAAGA,EAAI,GAAKF,EAAUb,EAAKK,OAAQU,IAAKF,IAClDb,EAAKa,GAASxB,MAAS,EAAMY,GAAO,EACpCA,IAAa,EAInB,MAAO,CAAmB,MAAjBS,EAAU,GAAYV,GC3BRgB,CAAYN,GAAnC,mBAAOO,EAAP,KAAaC,EAAb,KACAC,EAAYF,GACZG,EAAcF,QAEdG,EAAa,MAEd,IAEH,MAAoCC,mBAAS1B,KAA7C,mBAAO2B,EAAP,KAAmBH,EAAnB,KACA,EAAgCE,oBAAS,GAAzC,mBAAOhC,EAAP,KAAiB6B,EAAjB,KAEMR,EAAc,SAACa,GACnB,IAAMC,EAASC,OAAOC,SAASC,OAE/B,IAAKH,EAAOI,WAAW,KACrB,MAAO,GAGT,IAP0B,EAOpBC,EAAcL,EAAOM,UAAU,GAAGC,MAAM,KAPpB,cASVF,GATU,IAS1B,2BAA6B,CAAC,IAAnBG,EAAkB,QAC3B,GAAIA,EAAEJ,WAAWL,EAAK,KACpB,OAAOS,EAAEF,UAAUP,EAAGnB,OAAS,IAXT,8BAe1B,MAAO,IAWHZ,EAAa,SAACyC,GAGlB,IAAIC,EAAS,YAAOZ,GACpBY,EAAUC,QAAO,SAAAH,GAAC,OAAIA,EAAE9C,OAAS+C,KAAOG,SAAQ,SAAAJ,GAAC,OAAIA,EAAE5C,MAAQ4C,EAAE5C,QACjE+B,EAAce,GAGdd,EAAatB,EAASoC,EAAW7C,KAG7B+B,EAAe,SAACiB,GACpB,IAAIC,EAAab,OAAOC,SAASa,KAC3BC,EAAYF,EAAWX,OAAOF,OAAOC,SAASe,SAAW,KAE/D,GAAIJ,EAAajC,OAAS,EAAG,CAC3B,IAAMsC,EAASJ,EAAWK,OAAO,EAAGH,GAAa,WAAaH,EAC9DZ,OAAOmB,QAAQC,aAAa,KAAM,GAAIH,QAEtCjB,OAAOmB,QAAQC,aAAa,KAAM,GAAIP,EAAWK,OAAO,EAAGH,GAAa,MAS5E,OACE,qBAAKlD,UAAU,MAAf,SACE,yBAAQA,UAAU,aAAlB,UACE,sBAAKiC,GAAG,WAAR,UACE,qBAAKA,GAAG,gBAAR,SACE,uBAAOuB,KAAK,WAAWxD,UAAU,gBAAgByD,QAAS1D,EAAU2D,MAAM,WAAWC,SAV5E,WACjB7B,EAAatB,EAASwB,GAAajC,IACnC6B,GAAa7B,QAUP,qBAAKkC,GAAG,cAAchC,QA3CZ,WAChB,GAAIkC,OAAOyB,QAAQ,mCAAoC,CACrD,IAAMC,EAAWxD,IACjBwB,EAAcgC,GACd/B,EAAatB,EAASqD,EAAU9D,MAuC5B,sBAEAiC,EAAW1B,KAAI,SAAAwD,GAAE,OACjB,cAAC,EAAD,CAA2BhE,KAAMgE,EAAGhE,KAAMC,SAAUA,EAAUG,WAAYA,EAA1E,SAAuF4D,EAAGlE,MAAxEkE,EAAGlE,eCnF/BmE,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFhD,SAASiD,eAAe,W","file":"static/js/main.d544630b.chunk.js","sourcesContent":["import './StateButton.css';\r\nimport React from 'react';\r\n\r\nconst StateButton = (props) => {\r\n    const name = props.children;\r\n\r\n    if (props.seen) {\r\n        if (props.showSeen) {\r\n            return (<div className=\"seen state\" onClick={() => props.toggleSeen(name)}>{name}</div>);\r\n        } else {\r\n            return null;\r\n        }\r\n    } else {\r\n        return (<div className=\"unseen state\" onClick={() => props.toggleSeen(name)}>{name}</div>);\r\n    }\r\n}\r\n\r\nexport default StateButton;","\n  const allStates = [\n      'Alabama', 'Alaska', 'Arizona', 'Arkansas', 'California',\n      'Colorado', 'Connecticut', 'Delaware', 'Florida', 'Georgia',\n      'Hawaii', 'Idaho', 'Illinois', 'Indiana', 'Iowa', 'Kansas',\n      'Kentucky', 'Louisiana', 'Maine', 'Maryland', 'Massachusetts',\n      'Michigan', 'Minnesota', 'Mississippi', 'Missouri', 'Montana',\n      'Nebraska', 'Nevada', 'New Hampshire', 'New Jersey', 'New Mexico',\n      'New York', 'North Carolina', 'North Dakota', 'Ohio', 'Oklahoma',\n      'Oregon', 'Pennsylvania', 'Rhode Island', 'South Carolina',\n      'South Dakota', 'Tennessee', 'Texas', 'Utah', 'Vermont', 'Virginia',\n      'Washington', 'West Virginia', 'Wisconsin', 'Wyoming'];\n\n  const codeTable = \"0123456789\" +\n                    \"abcdefghijklmnopqrstuvwxyz\" +\n                    \"ABCDEFGHIJKLMNOPQRSTUVWXYZ\";\n\n  const isValidGame = (gameState) => gameState != null && gameState.length > 0;\n\n  const newGame = () => allStates.map (s => {\n    return {\n      name: s,\n      seen: false\n    };\n   });\n\n   const restoreGame = (gameState) => {\n\n      let game = newGame();\n      let current = 0;\n\n      for (let i = 1; i < gameState.length; i++) {\n         let num = codeTable.indexOf(gameState[i]);\n\n         for (let j = 0; j < 5 && current < game.length; j++, current++) {\n            game[current].seen = ((0x1 & num) > 0);\n            num = num >> 1;\n         }\n      }\n\n      return [ gameState[0] === '1', game ];\n   };\n\n   const saveGame = (game, showSeen) => {\n\n      let num = game[0].seen ? 1 : 0;\n      let digit = 0;\n      let encoded = showSeen ? \"1\" : \"0\";\n\n      for (let i = 1; i < game.length; i++) {\n\n         if (i % 5 === 0) {\n            encoded += codeTable[num];\n            digit = 0;\n            num = 0;\n         } else {\n            digit += 1;\n         }\n         \n         if (game[i].seen) {\n            num += (2 ** digit);\n            // console.log('num: ' + num);\n         }\n      }\n\n  encoded += codeTable[num];\n      return encoded;\n   };\n\n   export { isValidGame, newGame, restoreGame, saveGame }","import './App.css';\nimport React, { useEffect, useState } from 'react';\nimport StateButton from './components/StateButton';\nimport { isValidGame, newGame, restoreGame, saveGame } from './utils/Game';\n\nconst App = () => {\n\n  useEffect(() => {\n    document.title = \"License Plate Game\";\n\n    const gameState = getUrlParam('state');\n\n    if (isValidGame(gameState)) {\n      const [show, array ] = restoreGame(gameState);\n      setShowSeen(show);\n      setStateArray(array);\n    } else {\n      setUrlParams('');\n    }\n  }, []);\n\n  const [stateArray, setStateArray] = useState(newGame());\n  const [showSeen, setShowSeen] = useState(true);\n\n  const getUrlParam = (id) => {\n    const params = window.location.search;\n\n    if (!params.startsWith(\"?\")) {\n      return '';\n    }\n\n    const splitParams = params.substring(1).split('&');\n\n    for (const p of splitParams) {\n      if (p.startsWith(id + '=')) {\n        return p.substring(id.length + 1);\n      }\n    }\n\n    return '';\n  }\n\n  const resetGame = () => {\n    if (window.confirm(\"Are you sure you want to reset?\")) {\n      const newArray = newGame();\n      setStateArray(newArray);\n      setUrlParams(saveGame(newArray, showSeen))\n    }\n  }\n\n  const toggleSeen = (state) => {\n\n    // Mark all states with matching names as \"seen\"\n    let tempArray = [...stateArray];\n    tempArray.filter(p => p.name === state).forEach(p => p.seen = !p.seen);\n    setStateArray(tempArray);\n\n    // Update the URL to include the game state\n    setUrlParams(saveGame(tempArray, showSeen))\n  }\n\n  const setUrlParams = (newGameState) => {\n    let currentURL = window.location.href;\n    const pathIndex = currentURL.search(window.location.pathname + '$');\n\n    if (newGameState.length > 0) {\n      const newURL = currentURL.substr(0, pathIndex) + '/?state=' + newGameState;\n      window.history.replaceState(null, '', newURL);\n    } else {\n      window.history.replaceState(null, '', currentURL.substr(0, pathIndex) + '/');\n    }\n  }\n\n  const toggleShow = () => {\n    setUrlParams(saveGame(stateArray, !showSeen));\n    setShowSeen(!showSeen);\n  }\n\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <div id=\"controls\">\n          <div id=\"showSeenCheck\">\n            <input type=\"checkbox\" className=\"showSeenCheck\" checked={showSeen} value=\"showSeen\" onChange={toggleShow} />\n          </div>\n          <div id=\"resetButton\" onClick={resetGame}>Reset</div>\n        </div>\n        { stateArray.map(so =>\n          <StateButton key={so.name} seen={so.seen} showSeen={showSeen} toggleSeen={toggleSeen}>{so.name}</StateButton>\n        )}\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}